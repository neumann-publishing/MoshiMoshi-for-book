/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Meetings {
  createdAt: Generated<Timestamp>;
  finishedAt: Timestamp | null;
  name: string;
  updatedAt: Generated<Timestamp>;
  uuid: string;
}

export interface Participants {
  createdAt: Generated<Timestamp | null>;
  isOwner: Generated<boolean>;
  meetingUuid: string;
  userId: number;
}

export interface Users {
  createdAt: Generated<Timestamp>;
  email: string;
  id: Generated<number>;
  name: string | null;
  passwordDigest: string;
  updatedAt: Generated<Timestamp>;
}

export interface DB {
  meetings: Meetings;
  participants: Participants;
  users: Users;
}
